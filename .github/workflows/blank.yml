name: Build and deploy latex sources to GitHub Pages

on: push

jobs:
  build:
    # Базовая ОС, на которой будут исполняться команды. Оставим ubuntu

    runs-on: ubuntu-latest

    steps:
      # Необходимо использовать этот action, чтобы получить содержимое репо

      - uses: actions/checkout@v2

      # Компилируем документ

      - name: Build document

        uses: dante-ev/latex-action@latest

        with:
          # Переименуйте, если у вас другой файл

          root_file: questions.latex

          # Аргументы, к которыми запускать компилятор (latexmk)

          # -jobname=<name> дает возможность поменять имя выходного файла

          args: -jobname=algoColloquium -pdf -file-line-error -halt-on-error -interaction=nonstopmode

          compiler: latexmk

      # Загружаем собранные pdf-файлы

      - name: Upload pdf document

        uses: actions/upload-artifact@v2

        with:
          # Это значение используется как ключ в хранилище

          name: algoColloquium

          # Путь до собранного pdf. Может содержать «*», «**»

          # Здесь это <working_directory>/<jobname>.pdf

          path: algoColloquium.pdf
  deploy:
    runs-on: ubuntu-latest

    # Можно зависеть от любого другого job. Порядок выполнения будет подстраиваться.

    needs: [build]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
      # Это хак, чтобы дергать bash-команды и запоминанать их результат

      - name: Variables

        # id используется внутренне: по нему можно ссылаться на результаты из другого step

        id: vars

        # echo в таком форматировании позволит впоследствии ссылаться на результаты через ${{ steps.<step_id>.outputs.<variable_name> }}

        # Вертикальная черта | — это специальный символ yaml. Означает, что дальше идет массив команд и их все надо выполнить

        run: |

          echo «::set-output name=date::$(date +'%Y-%m-%d')»
          echo «::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)»

      - name: Download artifacts

        uses: actions/download-artifact@v2

        with:
          # Тот самый ключ, который мы указывали в upload-artifact

          name: algoColloquium

      - name: Create a Release
        uses: actions/create-release@v1

        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release
          release_name: algoColloquium-${{ steps.vars.outputs.date }}-${{ steps.vars.outputs.sha8 }}

      # Прикладываемые файлы надо заливать отдельным step

      - name: Upload pdf asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./algoColloquium.pdf
          # Имя, которое будет высвечиваться в релизе
          asset_name: algoColloquium.pdf
          asset_content_type: application/pdf
